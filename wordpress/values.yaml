nameOverride: ""
fullnameOverride: ""

persistence:
  enabled: false
  storageClassName: "" #ReadWriteMany support
  size: "10Gi"
  existingPvc: ""

wordpress:
  url: &url ""
  title: ""
  admin:
    username: ""
    password: ""
    email: ""
  database:
    name: "wp"
    tablePrefix: "wp_"
    auth:
      username: ""
      password: ""
      existingSecret:
        enabled: false
        name: ""
        usernameKey: ""
        passwordKey: ""
    external: 
      enabled: false
      host: ""
  extraEnv: {}

ingress:
  enabled: false
  className: "nginx"
  annotations: 
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    # nginx.ingress.kubernetes.io/proxy-body-size: "100m"
  hosts:
    - host: *url
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: ""
      hosts:
        - *url

nginx:
  replicaCount: 1
  confsOverride:
    maxBodySize: 100M
  serviceAccount:
    create: true
    automount: false
    annotations: {}
    name: "nginx"
  image:
    repository: nginxinc/nginx-unprivileged
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "alpine"
  imagePullSecrets: []
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    fsGroup: 82
    runAsNonRoot: true
    runAsUser: 82
    runAsGroup: 82
  securityContext:
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    allowPrivilegeEscalation: false
  service:
    type: ClusterIP
    port: 8080
  resources: {}
    # limits:
    #   memory: "1024Mi"
    #   cpu: "2"
    # requests:
    #   memory: "512Mi"
    #   cpu: "512m"
  livenessProbe:
    httpGet:
      path: /readme.html
      port: http
    initialDelaySeconds: 60
    timeoutSeconds: 10
  readinessProbe:
    httpGet:
      path: /readme.html
      port: http
    initialDelaySeconds: 20
    timeoutSeconds: 10
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false
  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
  nodeSelector: {}
  tolerations: []
  affinity: {}

php:
  replicaCount: 1
  iniConfigOverride:
    memoryLimit: 256M
    maxExecutionTime: 300
    postMaxSize: 100M
    maxInputTime: 300
    maxInputVars: 3000
    uploadMaxFileSize: 100M
  poolConfigOverride:
    pm: "dynamic"
    pmMaxChildren: "24"
    pmStartServers: "6"
    pmMinSpareServers: "6"
    pmMaxSpareServers: "18"
    pmStatusPath: /status
  image:
    repository: wordpress
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "6.8.1-php8.2-fpm-alpine@sha256:82eac77ce336f1b74fbdd346d67080b2ffb0e6f1840955d61824a491ec779a3c"
  imagePullSecrets: []
  serviceAccount:
    create: true
    automount: false
    annotations: {}
    name: "php"
  podAnnotations: {}
  podLabels: {}
  podSecurityContext:
    fsGroup: 82
    runAsNonRoot: true
    runAsUser: 82
    runAsGroup: 82
  securityContext:
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    allowPrivilegeEscalation: false
  service:
    type: ClusterIP
    port: 9000
  resources: 
    limits:
      memory: "1024Mi"
      cpu: "2"
    requests:
      memory: "512Mi"
      cpu: "512m"
  livenessProbe: {}
  #   exec:
  #     command:
  #       - php-fpm-healthcheck
  #       - --listen-queue=10 # fails if there are more than 10 processes waiting in the fpm queue
  #   periodSeconds: 123
  readinessProbe: {}
  #   exec:
  #     command:
  #       - php-fpm-healthcheck # a simple ping since this means it's ready to handle traffic
  #   initialDelaySeconds: 23
  #   periodSeconds: 60
  startupProbe:
    tcpSocket:
      port: 9000
    failureThreshold: 30
    periodSeconds: 12
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false
  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
  nodeSelector: {}
  tolerations: []
  affinity: {}
  exporter:
    enabled: false
    image:
      repository: smartcommunitylab/php-fpm_exporter
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "nonroot"
    serviceMonitor:
      enabled: true
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      allowPrivilegeEscalation: false
    resources: {}
      # limits:
      #   memory: "64Mi"
      #   cpu: "200m"
      # requests:
      #   memory: "32Mi"
      #   cpu: "100m"

mariadb:
  enabled: true
  initdbScriptsConfigMap: "mariadb-init-script-configmap"
  primary:
    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      datadir=/bitnami/mariadb/data
      plugin_dir=/opt/bitnami/mariadb/plugin
      port={{ .Values.primary.containerPorts.mysql }}
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=64M
      bind-address=*
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      slow_query_log=0
      long_query_time=10.0
      binlog_expire_logs_seconds=2592000

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    resources: {}
      # requests:
      #   cpu: 1
      #   memory: 512Mi
      # limits:
      #   cpu: 3
      #   memory: 1024Mi
    extraEnvVarsSecret: "db-vars"
    persistence:
      enabled: true
      existingClaim: ""
      subPath: ""
      storageClass: ""
      accessModes:
        - ReadWriteOnce
      size: 8Gi
  auth:
    database: ""

redis:
  enabled: false
  architecture: standalone
  auth:
    enabled: false
    sentinel: false
    existingSecret: ""
    existingSecretPasswordKey: ""
  master:
    persistence:
      enabled: false

debug:
  enabled: true
  image:
    repository: wordpress
    pullPolicy: IfNotPresent
    tag: "cli-php8.2"
  imagePullSecrets: []
  serviceAccount:
    create: true
    automount: false
    annotations: {}
    name: "debug"
  resources: {}
    # limits:
    #   memory: "512Mi"
    #   cpu: "1"
    # requests:
    #   memory: "64Mi"
    #   cpu: "100m"
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext:
    fsGroup: 82
    runAsNonRoot: true
    runAsUser: 82
    runAsGroup: 82
  securityContext:
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    allowPrivilegeEscalation: false

jobs:
  serviceAccount:
    create: true
    automount: false
    annotations: {}
    name: "jobs"
  initialize:
    enabled: true
  backup:
    cron: "0 0 * * *"
    tempStorageSize: 256Mi
    azure:
      enabled: false
      # Secret containing AZURE_BLOB_URL and TOKEN variables
      existingSecret: ""
      image:
        repository: peterdavehello/azcopy
        tag: 10
      resources: {}
        # limits:
        #   memory: "1024Mi"
        #   cpu: "1"
        # requests:
        #   memory: "64Mi"
        #   cpu: "100m"
    s3:
      enabled: false
    pvc:
      enabled: false
  update:
    enabled: true
    cron: "0 1 * * *"
    plugins: true
    themes: true
    languages: true
    core: true
  plugins:
    enabled: false
    deleteUnused: false
    w3tc:
      enabled: false
  common:
    ttlSecondsAfterFinished: 86400
    image:
      repository: wordpress
      pullPolicy: IfNotPresent
      tag: "cli-php8.2"
    imagePullSecrets: []
    serviceAccount:
      create: true
      automount: false
      annotations: {}
      name: "debug"
    resources: {}
      # limits:
      #   memory: "256Mi"
      #   cpu: "1"
      # requests:
      #   memory: "64Mi"
      #   cpu: "100m"
    nodeSelector: {}
    tolerations: []
    affinity: {}
    podSecurityContext:
      fsGroup: 82
      runAsNonRoot: true
      runAsUser: 82
      runAsGroup: 82
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: false
      runAsNonRoot: true
      allowPrivilegeEscalation: false

